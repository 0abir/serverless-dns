name: ðŸ¦• Deno

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - ".github/**"
      - "!.github/workflows/deno-deploy.yml"
      - ".env.example"
      - ".eslintrc.cjs"
      - ".prettierignore"
      - "README.md"
      - "wrangler.toml"
      - "fly.toml"
      - "node.Dockerfile"
      - "deno.Dockerfile"
      - ".vscode/*"
      - ".husky/*"
      - ".prettierrc.json"
      - "LICENSE"
      - "run"
  workflow_dispatch:
    inputs:
      git-ref:
        description: 'Branch / ref / tag to build'
        required: false
        default: 'main'
      deployment-type:
        description: 'Deploy type'
        required: false
        default: 'dev'
        type: choice
        options:
        - dev
        - live
      deploy-mode:
        description: 'Deploy via action or auto'
        required: false
        default: 'action'
        type: choice
        options:
        - action
        - auto

env:
  BUILD_BRANCH: >
    ${{ github.event_name == 'workflow_dispatch' &&
      github.event.inputs.deployment-type == 'live' &&
      'build/deno-deploy/live' || 'build/deno-deploy/dev' }}
  IN_FILE: 'src/server-deno.ts'
  OUT_FILE: 'index.bundle.js'
  DEPLOY_MODE: 'action'

jobs:
  deploy:
    name: ðŸŒ¯ Deno Deploy
    runs-on: ubuntu-latest
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.git-ref || github.ref }}

      - name: ðŸ§° Configuring workspace
        run: |
          git fetch --all
          git checkout --orphan ${BUILD_BRANCH} || git checkout ${BUILD_BRANCH}
          git reset
          git merge origin/${BUILD_BRANCH} || :
          echo "DEPLOY_MODE=${DM}" >> $GITHUB_ENV
          echo "::notice::deploy mode: $DM"
        env:
          DM: ${{ github.event.inputs.deploy-mode || env.DEPLOY_MODE }}

      - name: Installing Deno
        uses: denoland/setup-deno@main
        with:
          deno-version: 1.18.2

      - name: ðŸ“¦ Bundling
        run: |
          deno bundle --import-map=import_map.json ${IN_FILE} ${OUT_FILE}
        shell: bash

      # github.com/denoland/deployctl/blob/febd898/action.yml
      - name: Deploy
        id: dd
        if: ${{ env.DEPLOY_MODE == 'action' }}
        uses: denoland/deployctl@v1
        with:
          project: rdns
          entrypoint: ${{ env.OUT_FILE }}

      - name: ðŸš¢ Pushing to build branch
        if: ${{ env.DEPLOY_MODE == 'auto' }}
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'
          git add ${OUT_FILE}
          git commit -m "Update bundle for ${GITHUB_SHA}" && \
            echo "::notice::Pushing to ${BUILD_BRANCH}" || \
            echo "::notice::No changes to commit"
          git push origin ${BUILD_BRANCH}
